    if(!strncmp(inp, MPG, strlen(MPG))){
      //printf("MPG SELECTED\n");
      //char *res = getId(inp);
      //char *id = malloc(strlen(inp));
      //id = strtok(inp,",");
      //id = strtok (NULL, ",");
      if(1){
        //printf("IN MAIN: %s\n", res);
        //printf("INPUT WAS: %s", inp);
        err = write (toChild[1], inp, strlen("argument_in_pipe")+1);
        if (err == -1 ) {
          printf ("Error on write to pipe: %d\n", errno);
          exit (1);
        }

        int n;
        char buf[10000];
        n = read(toParent[0], &buf, 10000);
        if (n < 0) {
          printf("pipe read failed, errno = %d\n", errno);
          exit(1);
        }
        buf[n] = '\0';
        fflush(stdout);
        sleep(1); // Sometimes STDOUT gets garbled, sleep for 1 sec for it to resolve
        printf("PARENT FROM PIPE: %s\n", buf);
        printf("PARENT FROM BYTES: %d\n", n);
      }else{
        printf("NEED TO ENTER ID FOR MPG!\n");
      }
    } else if (!strncmp(inp, LIST, strlen(LIST))){
      //printf("LIST SELECTED\n");
      //char *res = getId(inp);
      /*
      if(res){
        printf("IN MAIN: %s", res);
      }else{
        printf("NEED TO ENTER ID FOR LIST!\n");
      }*/
    } else if (!strncmp(inp, EXIT, strlen(EXIT))){
      break;
    }else{
      printf("UNKNOWN\n");
    }